#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct triangle
{
	int a;
	int b;
	int c;
};

typedef struct triangle triangle;
// Function to calculate the area of a triangle using Heron's formula
double calculate_area(triangle t) {
    double p = (double)(t.a + t.b + t.c) / 2.0;
    return sqrt(p * (p - t.a) * (p - t.b) * (p - t.c));
}

// Comparison function for qsort
int compare_triangles(const void* a, const void* b) {
    triangle* t1 = (triangle*)a;
    triangle* t2 = (triangle*)b;

    double area1 = calculate_area(*t1);
    double area2 = calculate_area(*t2);

    if (area1 < area2) {
        return -1;
    } else if (area1 > area2) {
        return 1;
    } else {
        return 0;
    }
}

// The required function to sort the array of triangles by area
void sort_by_area(triangle* tr, int n) {
    qsort(tr, n, sizeof(triangle), compare_triangles);
}


int main()
{
	int n;
	scanf("%d", &n);
	triangle *tr = malloc(n * sizeof(triangle));
	for (int i = 0; i < n; i++) {
		scanf("%d%d%d", &tr[i].a, &tr[i].b, &tr[i].c);
	}
	sort_by_area(tr, n);
	for (int i = 0; i < n; i++) {
		printf("%d %d %d\n", tr[i].a, tr[i].b, tr[i].c);
	}
	return 0;
}
